version: "3.7"
services:
#   upstream:
#     build: .
#     image: sleuth-test
#     environment:
#       - APP_NAME=upstream
#       - PORT=8081
#       - DOWNSTREAM=http://localhost:8082


# # -------------------------------------------
# # Microservices
# # -------------------------------------------
#   # upstream:
#   #   image: sleuth-test
#   #   network_mode: host
#   #   environment:
#   #     - spring.application.name=upstream
#   #     - server.port=8081
#   #     - downstream.server.url=http://localhost:8082
#   middle:
#     image: sleuth-test
#     network_mode: host
#     environment:
#       - APP_NAME=middle
#       - PORT=8082
#       - DOWNSTREAM=http://localhost:8083
#   downstream:
#     image: sleuth-test
#     network_mode: host
#     environment:
#       - APP_NAME=downstream
#       - PORT=8083
# -------------------------------------------
# Logging infrastructure
# -------------------------------------------
# To run elasticsearch you must run
# > sudo sysctl -w vm.max_map_count=262144
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.0
    container_name: els
    networks:
      - nw1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
     # - ELASTIC_PASSWORD=password
    #   - vm.max_map_count=262144
  # The following will store es data in your boot2docker vm
    volumes:
      - ./elastic/data:/usr/share/elasticsearch/data
    #mem_limit: 2G
    ports:
      - "9200:9200"
      - "9300:9300"
  # Accessible at http://localhost:5601
  kibana:
    image: docker.elastic.co/kibana/kibana:6.8.0
    container_name: kibana
    networks:
      - nw1
    environment:
      - ELASTICSEARCH_URL=http://els:9200
      - elasticsearch.username=elastic
      - elasticsearch.password=password
    # mem_limit: 200m
    ports:
      - "5601:5601"
  logstash:
    image: docker.elastic.co/logstash/logstash:6.8.0
    container_name: logstash
    networks:
      - nw1
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline/
    environment:
      - xpack.monitoring.elasticsearch.url=http://els:9200
      - xpack.monitoring.elasticsearch.username=elastic
      - xpack.monitoring.elasticsearch.password=password
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - nw1
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    networks:
      - nw1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=${KK_LISTENER}
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=${KK_LISTENER},OUTSIDE://:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE

  # Accessible at http://localhost:9411/zipkin/
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      - nw1
    depends_on:
      - kafka
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=elasticsearch
      - KAFKA_BOOTSTRAP_SERVERS=http://kafka:9092
      # Point the zipkin at the storage backend
      - ES_HOSTS=http://els:9200
networks:
  nw1:
    name: trace_network

# -------------------------------------------
# infrastructure microservices
# -------------------------------------------

# -------------------------------------------
# mock downstream microservices
# -------------------------------------------
